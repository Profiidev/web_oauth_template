services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.Dev
    volumes:
      - ./frontend:/app/frontend
      - ./node_modules:/app/node_modules
      - ./package-lock.json:/app/package-lock.json
      - ./package.json:/app/package.json
    tty: true
    networks:
      - nginx
    command: npm run dev -- --host

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.Dev
    volumes:
      - ./backend:/app
    networks:
      - nginx
      - loki
    tty: true
    entrypoint: ["tini", "--"]
    command: ["cargo", "watch", "-x", "run"]
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "1420:1420"
    networks:
      - nginx
    environment:
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
    depends_on:
      - frontend
      - backend

  postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=test
      - POSTGRES_DB=test
    networks:
      - nginx
    ports:
      - "9301:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "test"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
      start_interval: 1s

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    volumes:
      - "logs:/loki"

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_LOG_MODE=file
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "6354:3000"
    networks:
      - loki

networks:
  nginx:
  loki:

volumes:
  logs:
