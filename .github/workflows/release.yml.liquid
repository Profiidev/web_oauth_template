name: Continuous Deployment

on:
  push:
    branches:
      - master
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      security-events: write
      
    strategy:
      matrix:
        item:
          [
            { df_path: ./frontend, image: "${{ github.repository}}/my-frontend" },
            { df_path: ./backend, image: "${{ github.repository}}/my-backend" },
          ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.item.image }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ${{ matrix.item.df_path }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: URL=${{ secrets.BACKEND_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

       - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: github.event_name != 'pull_request'
        with:
          subject-name: ${{ env.REGISTRY }}/${{ matrix.item.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.30.0
        if: github.event_name == 'pull_request'
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ !cancelled() && github.event_name == 'pull_request' }}
        with:
          sarif_file: "trivy-results.sarif"

  publish:
    name: Update Server
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        url: [ "1", "2" ]
    steps:
      - name: Update via Webhook
        uses: newarifrh/portainer-service-webhook@v1
        with:
          webhook_url: ${{ matrix.url == '1' && secrets.PORTAINER_BACKEND_WEBHOOK || secrets.PORTAINER_FRONTEND_WEBHOOK }}
